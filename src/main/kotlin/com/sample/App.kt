/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 * Ler: https://github.com/alzuma/javalin-java-10-guice/blob/master/src/main/java/io/kidbank/user/UserRouting.java
 * Ler: https://kotlinlang.org/docs/reference/compiler-reference.html
 */
package com.sample

import java.math.BigDecimal
import io.javalin.Javalin
import io.javalin.apibuilder.ApiBuilder.*
import com.google.inject.Guice;
import com.google.inject.AbstractModule;
import javax.inject.Inject;
import javax.inject.Singleton;

class AppModule : AbstractModule() {

    override fun configure() {
        bind(App::class.java)
        install(AlunoControllerModule())
        install(LoanControllerModule())
    }
}

@Singleton
class App {
    
    var alunoController: AlunoController
    var loanController: LoanController

    @Inject
    constructor(alunoController: AlunoController,
        loanController: LoanController) {

        this.alunoController = alunoController;
        this.loanController = loanController;
    }

    fun startRestServer() {
        Javalin.create { config ->
            config.defaultContentType = "application/json"
            config.addStaticFiles("/public")
            config.enableCorsForAllOrigins()
        }.routes {
            path("aluno") {
                get("") { ctx ->
                    alunoController.obterTodos(ctx)
                }
                post("") {
                    alunoController.salvar(Aluno("Tiago", 30, "111"))
                }
                //path(":user-id") {
                    //post(AlunoController::salvarAluno)
                //}
            }
            path("loan") {
                post("") {ctx ->
                    stringToDate("2000-09-01")?.let {
                        loanController.calculate(ctx, Loan("1111", "op", "M", it, BigDecimal(5070.66) withScale 2, 6, mutableListOf<BalanceDue>()))
                    }
                }
            }
        }.start(8080)
    }
}

fun main(args: Array<String>) {

    var injector = Guice.createInjector(AppModule())
    injector.getInstance(App::class.java).startRestServer()
}